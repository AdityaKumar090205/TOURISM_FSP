package master.dao;

import java.sql.*;
import master.dto.TourDTO;
import master.utilities.ConnectionFactory;

public class TourDao {
    private Connection cn = null;
    private Statement st = null;
    private PreparedStatement ps = null;
    private ResultSet rs = null;

    private String insert_sql = "INSERT INTO tours VALUES (?,?,?,?,?,?,?,?,?)";
    private String delete_sql = "DELETE FROM tours WHERE tourId=?";
    private String update_sql = "UPDATE tours SET startDate=?, endDate=?, price=? WHERE tourId=?";
    private String select_sql = "SELECT * FROM tours ORDER BY tourId";

    // ðŸ”Ž Search tour by ID
    public ResultSet searchById(String tourId) {
        String search_sql = "SELECT * FROM tours WHERE tourId='" + tourId + "'";
        try {
            ConnectionFactory con = new ConnectionFactory();
            cn = con.getConn();
            st = cn.createStatement();
            rs = st.executeQuery(search_sql);
        } catch (SQLException se) {
            se.printStackTrace();
        }
        return rs;
    }

    //  Insert tour
    public void insertData(TourDTO tdto) {
        try {
            ConnectionFactory con = new ConnectionFactory();
            cn = con.getConn();
            ps = cn.prepareStatement(insert_sql);

            ps.setString(1, tdto.getTourId());
            ps.setString(2, tdto.getTourName());
            ps.setString(3, tdto.getState());
            ps.setString(4, tdto.getCities());
            ps.setString(5, tdto.getTravelMode());
            ps.setString(6, tdto.getAccommodation());
            ps.setDate(7, tdto.getStartDate());
            ps.setDate(8, tdto.getEndDate());
            ps.setBigDecimal(9, tdto.getPrice());

            ps.executeUpdate();
        } catch (SQLException se) {
            se.printStackTrace();
        }
    }

    //  Delete tour
    public void deleteData(TourDTO tdto) {
        try {
            ConnectionFactory con = new ConnectionFactory();
            cn = con.getConn();
            ps = cn.prepareStatement(delete_sql);

            ps.setString(1, tdto.getTourId());
            ps.executeUpdate();
        } catch (SQLException se) {
            se.printStackTrace();
        }
    }

    // Update tour
    public void updateData(TourDTO tdto) {
        try {
            ConnectionFactory con = new ConnectionFactory();
            cn = con.getConn();
            ps = cn.prepareStatement(update_sql);

            ps.setDate(1, tdto.getStartDate());
            ps.setDate(2, tdto.getEndDate());
            ps.setBigDecimal(3, tdto.getPrice());
            ps.setString(4, tdto.getTourId());

            ps.executeUpdate();
        } catch (SQLException se) {
            se.printStackTrace();
        }
    }

    //  Get all tours
    public ResultSet getData() {
        try {
            ConnectionFactory con = new ConnectionFactory();
            cn = con.getConn();
            st = cn.createStatement();
            rs = st.executeQuery(select_sql);
        } catch (SQLException se) {
            se.printStackTrace();
        }
        return rs;
    }
}
